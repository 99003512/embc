
project1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000414  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005bc  080005c4  000105c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005bc  080005bc  000105c4  2**0
                  CONTENTS
  4 .ARM          00000000  080005bc  080005bc  000105c4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005bc  080005c4  000105c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005bc  080005bc  000105bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005c0  080005c0  000105c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005c4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005c4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000105c4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000769  00000000  00000000  000105f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001f0  00000000  00000000  00010d5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00010f50  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00010ff8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001213  00000000  00000000  00011078  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000969  00000000  00000000  0001228b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004976  00000000  00000000  00012bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001756a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  000175e8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080005a4 	.word	0x080005a4

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080005a4 	.word	0x080005a4

080001e8 <delay>:

#include "stm32f4xx.h"
#include "stm32f407xx_gpio_driver.h"

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<50000;i++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8000200:	4293      	cmp	r3, r2
 8000202:	d9f7      	bls.n	80001f4 <delay+0xc>

}
 8000204:	bf00      	nop
 8000206:	370c      	adds	r7, #12
 8000208:	46bd      	mov	sp, r7
 800020a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020e:	4770      	bx	lr

08000210 <main>:
int main(void)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	b084      	sub	sp, #16
 8000214:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOD;
 8000216:	4b0d      	ldr	r3, [pc, #52]	; (800024c <main+0x3c>)
 8000218:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_11;
 800021a:	230b      	movs	r3, #11
 800021c:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800021e:	2301      	movs	r3, #1
 8000220:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 8000222:	2303      	movs	r3, #3
 8000224:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000226:	2300      	movs	r3, #0
 8000228:	72fb      	strb	r3, [r7, #11]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800022a:	2301      	movs	r3, #1
 800022c:	733b      	strb	r3, [r7, #12]

	//GPIO initialization

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800022e:	2101      	movs	r1, #1
 8000230:	4806      	ldr	r0, [pc, #24]	; (800024c <main+0x3c>)
 8000232:	f000 f837 	bl	80002a4 <GPIO_PeriClockControl>
	GPIO_Inint(&GpioLed);
 8000236:	1d3b      	adds	r3, r7, #4
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f8b9 	bl	80003b0 <GPIO_Inint>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_11);
 800023e:	210b      	movs	r1, #11
 8000240:	4802      	ldr	r0, [pc, #8]	; (800024c <main+0x3c>)
 8000242:	f000 f975 	bl	8000530 <GPIO_ToggleOutputPin>
		delay();
 8000246:	f7ff ffcf 	bl	80001e8 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_11);
 800024a:	e7f8      	b.n	800023e <main+0x2e>
 800024c:	40020c00 	.word	0x40020c00

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	; (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	; (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	; (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	; (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	; (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	; (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 f96d 	bl	800055c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000282:	f7ff ffc5 	bl	8000210 <main>

08000286 <LoopForever>:

LoopForever:
    b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	080005c4 	.word	0x080005c4
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC_IRQHandler>
	...

080002a4 <GPIO_PeriClockControl>:
 */

#include "stm32f407xx_gpio_driver.h"

void GPIO_PeriClockControl(tGpio_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
 80002ac:	460b      	mov	r3, r1
 80002ae:	70fb      	strb	r3, [r7, #3]
	if(pGPIOx == GPIOA)
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a39      	ldr	r2, [pc, #228]	; (8000398 <GPIO_PeriClockControl+0xf4>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d106      	bne.n	80002c6 <GPIO_PeriClockControl+0x22>
	{
		 GPIOA_PCLK_EN() ;
 80002b8:	4b38      	ldr	r3, [pc, #224]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002bc:	4a37      	ldr	r2, [pc, #220]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002be:	f043 0301 	orr.w	r3, r3, #1
 80002c2:	6313      	str	r3, [r2, #48]	; 0x30
			{
				 GPIOE_PCLK_DIS() ;
			}
	}

}
 80002c4:	e061      	b.n	800038a <GPIO_PeriClockControl+0xe6>
	}else if(pGPIOx == GPIOB)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a35      	ldr	r2, [pc, #212]	; (80003a0 <GPIO_PeriClockControl+0xfc>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeriClockControl+0x38>
		 GPIOB_PCLK_EN() ;
 80002ce:	4b33      	ldr	r3, [pc, #204]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a32      	ldr	r2, [pc, #200]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002d4:	f043 0302 	orr.w	r3, r3, #2
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002da:	e056      	b.n	800038a <GPIO_PeriClockControl+0xe6>
	}else if(pGPIOx == GPIOC)
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a31      	ldr	r2, [pc, #196]	; (80003a4 <GPIO_PeriClockControl+0x100>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeriClockControl+0x4e>
		 GPIOC_PCLK_EN() ;
 80002e4:	4b2d      	ldr	r3, [pc, #180]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e8:	4a2c      	ldr	r2, [pc, #176]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002ea:	f043 0304 	orr.w	r3, r3, #4
 80002ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f0:	e04b      	b.n	800038a <GPIO_PeriClockControl+0xe6>
	}else if(pGPIOx == GPIOD)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a2c      	ldr	r2, [pc, #176]	; (80003a8 <GPIO_PeriClockControl+0x104>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x64>
		 GPIOD_PCLK_EN() ;
 80002fa:	4b28      	ldr	r3, [pc, #160]	; (800039c <GPIO_PeriClockControl+0xf8>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fe:	4a27      	ldr	r2, [pc, #156]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000300:	f043 0308 	orr.w	r3, r3, #8
 8000304:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000306:	e040      	b.n	800038a <GPIO_PeriClockControl+0xe6>
	}else if(pGPIOx == GPIOE)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a28      	ldr	r2, [pc, #160]	; (80003ac <GPIO_PeriClockControl+0x108>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x7a>
		 GPIOE_PCLK_EN() ;
 8000310:	4b22      	ldr	r3, [pc, #136]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000314:	4a21      	ldr	r2, [pc, #132]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000316:	f043 0310 	orr.w	r3, r3, #16
 800031a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031c:	e035      	b.n	800038a <GPIO_PeriClockControl+0xe6>
		if(pGPIOx == GPIOA)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a1d      	ldr	r2, [pc, #116]	; (8000398 <GPIO_PeriClockControl+0xf4>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0x90>
				 GPIOA_PCLK_DIS() ;
 8000326:	4b1d      	ldr	r3, [pc, #116]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032a:	4a1c      	ldr	r2, [pc, #112]	; (800039c <GPIO_PeriClockControl+0xf8>)
 800032c:	f023 0301 	bic.w	r3, r3, #1
 8000330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000332:	e02a      	b.n	800038a <GPIO_PeriClockControl+0xe6>
			}else if(pGPIOx == GPIOB)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a1a      	ldr	r2, [pc, #104]	; (80003a0 <GPIO_PeriClockControl+0xfc>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0xa6>
				 GPIOB_PCLK_DIS() ;
 800033c:	4b17      	ldr	r3, [pc, #92]	; (800039c <GPIO_PeriClockControl+0xf8>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a16      	ldr	r2, [pc, #88]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000342:	f023 0302 	bic.w	r3, r3, #2
 8000346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000348:	e01f      	b.n	800038a <GPIO_PeriClockControl+0xe6>
			}else if(pGPIOx == GPIOC)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a15      	ldr	r2, [pc, #84]	; (80003a4 <GPIO_PeriClockControl+0x100>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriClockControl+0xbc>
				 GPIOC_PCLK_DIS() ;
 8000352:	4b12      	ldr	r3, [pc, #72]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000356:	4a11      	ldr	r2, [pc, #68]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000358:	f023 0304 	bic.w	r3, r3, #4
 800035c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035e:	e014      	b.n	800038a <GPIO_PeriClockControl+0xe6>
			}else if(pGPIOx == GPIOD)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a11      	ldr	r2, [pc, #68]	; (80003a8 <GPIO_PeriClockControl+0x104>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0xd2>
				 GPIOD_PCLK_DIS() ;
 8000368:	4b0c      	ldr	r3, [pc, #48]	; (800039c <GPIO_PeriClockControl+0xf8>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036c:	4a0b      	ldr	r2, [pc, #44]	; (800039c <GPIO_PeriClockControl+0xf8>)
 800036e:	f023 0308 	bic.w	r3, r3, #8
 8000372:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000374:	e009      	b.n	800038a <GPIO_PeriClockControl+0xe6>
			}else if(pGPIOx == GPIOE)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a0c      	ldr	r2, [pc, #48]	; (80003ac <GPIO_PeriClockControl+0x108>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d105      	bne.n	800038a <GPIO_PeriClockControl+0xe6>
				 GPIOE_PCLK_DIS() ;
 800037e:	4b07      	ldr	r3, [pc, #28]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000382:	4a06      	ldr	r2, [pc, #24]	; (800039c <GPIO_PeriClockControl+0xf8>)
 8000384:	f023 0310 	bic.w	r3, r3, #16
 8000388:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038a:	bf00      	nop
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	40020000 	.word	0x40020000
 800039c:	40023800 	.word	0x40023800
 80003a0:	40020400 	.word	0x40020400
 80003a4:	40020800 	.word	0x40020800
 80003a8:	40020c00 	.word	0x40020c00
 80003ac:	40021000 	.word	0x40021000

080003b0 <GPIO_Inint>:

void GPIO_Inint(GPIO_Handle_t *pGPIOHandle)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b085      	sub	sp, #20
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	6078      	str	r0, [r7, #4]
	//1. configuration of mode of GPIOx
	uint32_t temp = 0;
 80003b8:	2300      	movs	r3, #0
 80003ba:	60fb      	str	r3, [r7, #12]

	temp= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<< (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	461a      	mov	r2, r3
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	791b      	ldrb	r3, [r3, #4]
 80003c6:	005b      	lsls	r3, r3, #1
 80003c8:	fa02 f303 	lsl.w	r3, r2, r3
 80003cc:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->MODER &= ~(0x3<<(2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); // reset the value
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	681a      	ldr	r2, [r3, #0]
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	791b      	ldrb	r3, [r3, #4]
 80003d8:	005b      	lsls	r3, r3, #1
 80003da:	2103      	movs	r1, #3
 80003dc:	fa01 f303 	lsl.w	r3, r1, r3
 80003e0:	43db      	mvns	r3, r3
 80003e2:	4619      	mov	r1, r3
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	400a      	ands	r2, r1
 80003ea:	601a      	str	r2, [r3, #0]
	pGPIOHandle->pGPIOx->MODER |=temp; // set the value
 80003ec:	687b      	ldr	r3, [r7, #4]
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	6819      	ldr	r1, [r3, #0]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	68fa      	ldr	r2, [r7, #12]
 80003f8:	430a      	orrs	r2, r1
 80003fa:	601a      	str	r2, [r3, #0]

	//2. configure the speed

	temp= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<< (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	799b      	ldrb	r3, [r3, #6]
 8000400:	461a      	mov	r2, r3
 8000402:	687b      	ldr	r3, [r7, #4]
 8000404:	791b      	ldrb	r3, [r3, #4]
 8000406:	005b      	lsls	r3, r3, #1
 8000408:	fa02 f303 	lsl.w	r3, r2, r3
 800040c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3<<(2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	689a      	ldr	r2, [r3, #8]
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	791b      	ldrb	r3, [r3, #4]
 8000418:	005b      	lsls	r3, r3, #1
 800041a:	2103      	movs	r1, #3
 800041c:	fa01 f303 	lsl.w	r3, r1, r3
 8000420:	43db      	mvns	r3, r3
 8000422:	4619      	mov	r1, r3
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	400a      	ands	r2, r1
 800042a:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |=temp;
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	6899      	ldr	r1, [r3, #8]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	68fa      	ldr	r2, [r7, #12]
 8000438:	430a      	orrs	r2, r1
 800043a:	609a      	str	r2, [r3, #8]

	//3.port pull up/pull down

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	79db      	ldrb	r3, [r3, #7]
 8000440:	461a      	mov	r2, r3
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	791b      	ldrb	r3, [r3, #4]
 8000446:	005b      	lsls	r3, r3, #1
 8000448:	fa02 f303 	lsl.w	r3, r2, r3
 800044c:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3<<(2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	68da      	ldr	r2, [r3, #12]
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	791b      	ldrb	r3, [r3, #4]
 8000458:	005b      	lsls	r3, r3, #1
 800045a:	2103      	movs	r1, #3
 800045c:	fa01 f303 	lsl.w	r3, r1, r3
 8000460:	43db      	mvns	r3, r3
 8000462:	4619      	mov	r1, r3
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	400a      	ands	r2, r1
 800046a:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |=temp;
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	68d9      	ldr	r1, [r3, #12]
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	68fa      	ldr	r2, [r7, #12]
 8000478:	430a      	orrs	r2, r1
 800047a:	60da      	str	r2, [r3, #12]

	//4. output type register

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	7a1b      	ldrb	r3, [r3, #8]
 8000480:	461a      	mov	r2, r3
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	791b      	ldrb	r3, [r3, #4]
 8000486:	fa02 f303 	lsl.w	r3, r2, r3
 800048a:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1<<(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	685a      	ldr	r2, [r3, #4]
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	791b      	ldrb	r3, [r3, #4]
 8000496:	4619      	mov	r1, r3
 8000498:	2301      	movs	r3, #1
 800049a:	408b      	lsls	r3, r1
 800049c:	43db      	mvns	r3, r3
 800049e:	4619      	mov	r1, r3
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	400a      	ands	r2, r1
 80004a6:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |=temp;
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	6859      	ldr	r1, [r3, #4]
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	68fa      	ldr	r2, [r7, #12]
 80004b4:	430a      	orrs	r2, r1
 80004b6:	605a      	str	r2, [r3, #4]

	//5. alternate function low register
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	795b      	ldrb	r3, [r3, #5]
 80004bc:	2b02      	cmp	r3, #2
 80004be:	d131      	bne.n	8000524 <GPIO_Inint+0x174>
    {
    uint8_t temp1, temp2;
    temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	791b      	ldrb	r3, [r3, #4]
 80004c4:	08db      	lsrs	r3, r3, #3
 80004c6:	72fb      	strb	r3, [r7, #11]
	temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	791b      	ldrb	r3, [r3, #4]
 80004cc:	f003 0307 	and.w	r3, r3, #7
 80004d0:	72bb      	strb	r3, [r7, #10]
	pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xf<<(4*temp2));
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	7afa      	ldrb	r2, [r7, #11]
 80004d8:	3208      	adds	r2, #8
 80004da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004de:	7abb      	ldrb	r3, [r7, #10]
 80004e0:	009b      	lsls	r3, r3, #2
 80004e2:	220f      	movs	r2, #15
 80004e4:	fa02 f303 	lsl.w	r3, r2, r3
 80004e8:	43db      	mvns	r3, r3
 80004ea:	4618      	mov	r0, r3
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	7afa      	ldrb	r2, [r7, #11]
 80004f2:	4001      	ands	r1, r0
 80004f4:	3208      	adds	r2, #8
 80004f6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	pGPIOHandle->pGPIOx->AFR[temp1] |=(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode << (4*temp2));
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	7afa      	ldrb	r2, [r7, #11]
 8000500:	3208      	adds	r2, #8
 8000502:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	7a5b      	ldrb	r3, [r3, #9]
 800050a:	461a      	mov	r2, r3
 800050c:	7abb      	ldrb	r3, [r7, #10]
 800050e:	009b      	lsls	r3, r3, #2
 8000510:	fa02 f303 	lsl.w	r3, r2, r3
 8000514:	4618      	mov	r0, r3
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	681b      	ldr	r3, [r3, #0]
 800051a:	7afa      	ldrb	r2, [r7, #11]
 800051c:	4301      	orrs	r1, r0
 800051e:	3208      	adds	r2, #8
 8000520:	f843 1022 	str.w	r1, [r3, r2, lsl #2]





}
 8000524:	bf00      	nop
 8000526:	3714      	adds	r7, #20
 8000528:	46bd      	mov	sp, r7
 800052a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800052e:	4770      	bx	lr

08000530 <GPIO_ToggleOutputPin>:
 *
 */


void GPIO_ToggleOutputPin(tGpio_RegDef_t *pGPIOx,uint8_t PinNumber)
{
 8000530:	b480      	push	{r7}
 8000532:	b083      	sub	sp, #12
 8000534:	af00      	add	r7, sp, #0
 8000536:	6078      	str	r0, [r7, #4]
 8000538:	460b      	mov	r3, r1
 800053a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	695b      	ldr	r3, [r3, #20]
 8000540:	78fa      	ldrb	r2, [r7, #3]
 8000542:	2101      	movs	r1, #1
 8000544:	fa01 f202 	lsl.w	r2, r1, r2
 8000548:	405a      	eors	r2, r3
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	615a      	str	r2, [r3, #20]

}
 800054e:	bf00      	nop
 8000550:	370c      	adds	r7, #12
 8000552:	46bd      	mov	sp, r7
 8000554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000558:	4770      	bx	lr
	...

0800055c <__libc_init_array>:
 800055c:	b570      	push	{r4, r5, r6, lr}
 800055e:	4e0d      	ldr	r6, [pc, #52]	; (8000594 <__libc_init_array+0x38>)
 8000560:	4c0d      	ldr	r4, [pc, #52]	; (8000598 <__libc_init_array+0x3c>)
 8000562:	1ba4      	subs	r4, r4, r6
 8000564:	10a4      	asrs	r4, r4, #2
 8000566:	2500      	movs	r5, #0
 8000568:	42a5      	cmp	r5, r4
 800056a:	d109      	bne.n	8000580 <__libc_init_array+0x24>
 800056c:	4e0b      	ldr	r6, [pc, #44]	; (800059c <__libc_init_array+0x40>)
 800056e:	4c0c      	ldr	r4, [pc, #48]	; (80005a0 <__libc_init_array+0x44>)
 8000570:	f000 f818 	bl	80005a4 <_init>
 8000574:	1ba4      	subs	r4, r4, r6
 8000576:	10a4      	asrs	r4, r4, #2
 8000578:	2500      	movs	r5, #0
 800057a:	42a5      	cmp	r5, r4
 800057c:	d105      	bne.n	800058a <__libc_init_array+0x2e>
 800057e:	bd70      	pop	{r4, r5, r6, pc}
 8000580:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000584:	4798      	blx	r3
 8000586:	3501      	adds	r5, #1
 8000588:	e7ee      	b.n	8000568 <__libc_init_array+0xc>
 800058a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800058e:	4798      	blx	r3
 8000590:	3501      	adds	r5, #1
 8000592:	e7f2      	b.n	800057a <__libc_init_array+0x1e>
 8000594:	080005bc 	.word	0x080005bc
 8000598:	080005bc 	.word	0x080005bc
 800059c:	080005bc 	.word	0x080005bc
 80005a0:	080005c0 	.word	0x080005c0

080005a4 <_init>:
 80005a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005a6:	bf00      	nop
 80005a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005aa:	bc08      	pop	{r3}
 80005ac:	469e      	mov	lr, r3
 80005ae:	4770      	bx	lr

080005b0 <_fini>:
 80005b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005b2:	bf00      	nop
 80005b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005b6:	bc08      	pop	{r3}
 80005b8:	469e      	mov	lr, r3
 80005ba:	4770      	bx	lr
